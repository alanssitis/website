---
import { BLOG_TITLE } from "../../consts";
import FormattedDate from "../../components/FormattedDate.astro";
import BasePage from "../../layouts/BasePage.astro";
import { type CollectionEntry, getCollection } from "astro:content";
import { render } from "astro:content";
import { Image } from "astro:assets";

export async function getStaticPaths() {
  const posts = await getCollection("blog");
  return posts.map((post) => ({
    params: { slug: post.id },
    props: post,
  }));
}
type Props = CollectionEntry<"blog">;

const post = Astro.props;
const { Content } = await render(post);
const { title, description, pubDate, updatedDate, heroImage, heroImageAlt } =
  post.data;

const images = import.meta.glob<{ default: ImageMetadata }>(
  "/src/assets/blog/*.{jpeg,jpg,png,gif}",
);
---

<BasePage title=`${title} | ${ BLOG_TITLE }` description={description}>
  <article>
    <div class="mb-4">
      {
        heroImage && images[heroImage] != null && (
          <Image
            class="shadow-theme-secondary dark:shadow-theme-dark-secondary w-full rounded-md object-scale-down object-center shadow-lg"
            src={images[heroImage]()}
            alt={heroImageAlt}
          />
        )
      }
    </div>
    <div class="my-6">
      <div>
        <div class="italic">
          <FormattedDate date={pubDate} />
          {
            updatedDate && (
              <div>
                Last updated on <FormattedDate date={updatedDate} />
              </div>
            )
          }
        </div>
        <h1 class="mt-4 mb-2 text-5xl font-extrabold">{title}</h1>
        <hr />
      </div>
      <div class="prose dark:prose-invert mt-6 w-full max-w-none">
        <Content />
      </div>
    </div>
  </article>
</BasePage>
